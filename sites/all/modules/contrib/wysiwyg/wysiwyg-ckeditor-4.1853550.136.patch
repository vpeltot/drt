diff --git a/editors/ckeditor.inc b/editors/ckeditor.inc
index 5e046aa..cc4d6bf 100644
--- a/editors/ckeditor.inc
+++ b/editors/ckeditor.inc
@@ -55,7 +55,9 @@ function wysiwyg_ckeditor_editor() {
  * Return an install note.
  */
 function wysiwyg_ckeditor_install_note() {
-  return '<p class="warning">' . t('Do NOT download the "CKEditor for Drupal" edition.') . '</p>';
+  $output = '<p class="warning">' . t('Do NOT download the "CKEditor for Drupal" edition.') . '</br>';
+  $output .= t('Make sure you install the full package as not all plugins work with the standard package.') . '</p>';
+  return $output;
 }
 
 /**
@@ -78,7 +80,8 @@ function wysiwyg_ckeditor_version($editor) {
     // version:'CKEditor 3.0 SVN',revision:'3665'
     // version:'3.0 RC',revision:'3753'
     // version:'3.0.1',revision:'4391'
-    if (preg_match('@version:\'(?:CKEditor )?([\d\.]+)(?:.+revision:\'([\d]+))?@', $line, $version)) {
+    // version:"4.0",revision:"769d96134b"
+    if (preg_match('@version:[\'"](?:CKEditor )?([\d\.]+)(?:.+revision:[\'"]([[:xdigit:]]+))?@', $line, $version)) {
       fclose($library);
       // Version numbers need to have three parts since 3.0.1.
       $version[1] = preg_replace('/^(\d+)\.(\d+)$/', '${1}.${2}.0', $version[1]);
@@ -132,6 +135,15 @@ function wysiwyg_ckeditor_themes($editor, $profile) {
  * @see http://docs.cksource.com/ckeditor_api/symbols/CKEDITOR.config.html#.stylesSet
  */
 function wysiwyg_ckeditor_settings_form(&$form, &$form_state) {
+  if (version_compare($form_state['wysiwyg']['editor']['installed version'], '3.6.0', '>=')) {
+    $form['appearance']['default_toolbar_grouping'] = array(
+      '#type' => 'checkbox',
+      '#title' => t('Use default toolbar button grouping'),
+      '#default_value' => !empty($form_state['wysiwyg_profile']->settings['default_toolbar_grouping']),
+      '#return_value' => 1,
+      '#description' => t('This option gives you the ability to enable/disable the usage of default groupings for toolbar buttons. If enabled, toolbar buttons will be placed into predetermined groups instead of all in a single group.'),
+    );
+  }
   if (version_compare($form_state['wysiwyg']['editor']['installed version'], '3.2.1', '>=')) {
     // Replace CSS classes element description to explain the advanced syntax.
     $form['css']['css_classes']['#description'] = t('Optionally define CSS classes for the "Font style" dropdown list.<br />Enter one class on each line in the format: !format. Example: !example<br />If left blank, CSS classes are automatically imported from loaded stylesheet(s).', array(
@@ -199,6 +211,7 @@ EOL;
  *   Drupal.settings.wysiwyg.configs.{editor}
  */
 function wysiwyg_ckeditor_settings($editor, $config, $theme) {
+  $default_skin = (version_compare($editor['installed version'], '4.0.0', '<') ? 'kama' : 'mono');
   $settings = array(
     // Needed to make relative paths work in the editor.
     'baseHref' => $GLOBALS['base_url'] . '/',
@@ -208,7 +221,7 @@ function wysiwyg_ckeditor_settings($editor, $config, $theme) {
     'height' => 420,
     // @todo Do not use skins as themes and add separate skin handling.
     'theme' => 'default',
-    'skin' => !empty($theme) ? $theme : 'kama',
+    'skin' => !empty($theme) ? $theme : $default_skin,
     // By default, CKEditor converts most characters into HTML entities. Since
     // it does not support a custom definition, but Drupal supports Unicode, we
     // disable at least the additional character sets. CKEditor always converts
@@ -276,6 +289,8 @@ function wysiwyg_ckeditor_settings($editor, $config, $theme) {
   }
 
   $settings['toolbar'] = array();
+  $supports_groups = version_compare($editor['installed version'], '3.6.0', '>=');
+  $use_default_groups = $supports_groups && !empty($config['default_toolbar_grouping']);
   if (!empty($config['buttons'])) {
     $extra_plugins = array();
     $plugins = wysiwyg_get_plugins($editor['name']);
@@ -289,7 +304,13 @@ function wysiwyg_ckeditor_settings($editor, $config, $theme) {
           }
           // Add buttons.
           if ($type == 'buttons') {
-            $settings['toolbar'][] = $button;
+            if ($use_default_groups) {
+              $settings['toolbar'][_wysiwyg_ckeditor_group($button)][] = $button;
+            }
+            else {
+              // Use one button row for backwards compatibility.
+              $settings['toolbar'][] = $button;
+            }
           }
           // Add external Drupal plugins to the list of extensions.
           if ($type == 'buttons' && !empty($plugins[$plugin]['proxy'])) {
@@ -318,8 +339,23 @@ function wysiwyg_ckeditor_settings($editor, $config, $theme) {
       $settings['extraPlugins'] = implode(',', $extra_plugins);
     }
   }
-  // For now, all buttons are placed into one row.
-  $settings['toolbar'] = array($settings['toolbar']);
+
+  if ($use_default_groups) {
+    // Organize groups to use lables to improves accesibility
+    // http://docs.ckeditor.com/#!/guide/dev_toolbar-section-3.
+    $groups_toolbar = array();
+    foreach ($settings['toolbar'] as $group => $items) {
+      $groups_toolbar[] = array(
+        'name' => $group,
+        'items' => $items,
+      );
+      $settings['toolbar'] = $groups_toolbar;
+    }
+  }
+  else {
+    // For now, all buttons are placed into one row.
+    $settings['toolbar'] = array($settings['toolbar']);
+  }
 
   return $settings;
 }
@@ -447,6 +483,7 @@ function wysiwyg_ckeditor_plugins($editor) {
         'Maximize' => t('Maximize'),
         'SpellChecker' => t('Check spelling'), 'Scayt' => t('Check spelling as you type'),
         'About' => t('About'),
+        'Templates' => t('Templates'),
       ),
       'internal' => TRUE,
     ),
@@ -465,3 +502,95 @@ function wysiwyg_ckeditor_plugins($editor) {
   return $plugins;
 }
 
+/**
+ * Define grouping for ckEditor buttons.
+ */
+function _wysiwyg_ckeditor_group($button) {
+  switch ($button) {
+    case 'Source':
+      $group = 'document';
+      break;
+
+    case 'Cut':
+    case 'Copy':
+    case 'Paste':
+    case 'PasteText':
+    case 'PasteFromWord':
+    case 'Undo':
+    case 'Redo':
+      $group = 'clipboard';
+      break;
+
+    case 'Find':
+    case 'Replace':
+    case 'SelectAll':
+    case 'SpellChecker':
+    case 'Scayt':
+      $group = 'editing';
+      break;
+
+    case 'Bold':
+    case 'Italic':
+    case 'Underline':
+    case 'Strike':
+    case 'Subscript':
+    case 'Superscript':
+    case 'RemoveFormat':
+      $group = 'basicstyles';
+      break;
+
+    case 'NumberedList':
+    case 'BulletedList':
+    case 'Outdent':
+    case 'Indent':
+    case 'Blockquote':
+    case 'CreateDiv':
+    case 'JustifyLeft':
+    case 'JustifyCenter':
+    case 'JustifyRight':
+    case 'JustifyBlock':
+    case 'BidiLtr':
+    case 'BidiRtl':
+      $group = 'paragraph';
+      break;
+
+    case 'Link':
+    case 'Unlink':
+    case 'Anchor':
+      $group = 'links';
+      break;
+
+    case 'Image':
+    case 'Flash':
+    case 'Table':
+    case 'HorizontalRule':
+    case 'Smiley':
+    case 'SpecialChar':
+    case 'Iframe':
+    case 'Templates':
+      $group = 'insert';
+      break;
+
+    case 'Styles':
+    case 'Format':
+    case 'Font':
+    case 'FontSize':
+      $group = 'styles';
+      break;
+
+    case 'TextColor':
+    case 'BGColor':
+      $group = 'colors';
+      break;
+
+    case 'Maximize':
+    case 'ShowBlocks':
+    case 'About':
+      $group = 'tools';
+      break;
+
+    default:
+      $group = 'other';
+  }
+  return $group;
+}
diff --git a/editors/js/ckeditor-3.0.js b/editors/js/ckeditor-3.0.js
index ae22a94..87d281c 100644
--- a/editors/js/ckeditor-3.0.js
+++ b/editors/js/ckeditor-3.0.js
@@ -184,7 +184,8 @@ Drupal.wysiwyg.editor.instance.ckeditor = {
           editor.on('mode', function(ev) {
             if (ev.editor.mode == 'wysiwyg') {
               // Inject CSS files directly into the editing area head tag.
-              $('head', $('#cke_contents_' + ev.editor.name + ' iframe').eq(0).contents()).append('<link rel="stylesheet" href="' + settings.css + '" type="text/css" >');
+              var iframe = $('#cke_contents_' + ev.editor.name + ' iframe, #' + ev.editor.id + '_contents iframe');
+              $('head', iframe.eq(0).contents()).append('<link rel="stylesheet" href="' + settings.css + '" type="text/css" >');
             }
           });
         }
@@ -199,12 +200,7 @@ Drupal.wysiwyg.editor.instance.ckeditor = {
                   data.node = data.node.$;
                 }
                 if (selection.getType() == CKEDITOR.SELECTION_TEXT) {
-                  if (CKEDITOR.env.ie) {
-                    data.content = selection.getNative().createRange().text;
-                  }
-                  else {
-                    data.content = selection.getNative().toString();
-                  }
+                  data.content = selection.getSelectedText();
                 }
                 else if (data.node) {
                   // content is supposed to contain the "outerHTML".
